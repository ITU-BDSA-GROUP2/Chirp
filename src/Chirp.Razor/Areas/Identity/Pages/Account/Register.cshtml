@page
@model RegisterModel
@{
    ViewData["Title"] = "Register";

}

<h1>@ViewData["Title"]</h1>
<a href="/">public timeline</a>
<div class="row">
    <div class="col-md-4">
        <div class="titleWrapper">
            <h2>Create a new account.</h2>
            <h2>Use another service to register.</h2>
        </div>
        <hr />
        <div class="multiRow">
            <div class="singleRow">
                <form id="registerForm" asp-route-returnUrl="@Model.ReturnUrl" method="post">
                    <div asp-validation-summary="ModelOnly" class="errorMSG" role="alert"></div>
                    <div class="form-floating mb-3 wrapper">
                        <label asp-for="Input.Email" class="text">Email</label>
                        <input asp-for="Input.Email" class="form-control emailAndPassword" autocomplete="username" aria-required="true"
                            placeholder="name@example.com" />
                        <span asp-validation-for="Input.Email" class="text-danger"></span>
                    </div>
                    <div class="form-floating mb-3 wrapper">
                        <label asp-for="Input.Password" class="text">Password</label>
                        <input asp-for="Input.Password" class="form-control emailAndPassword" autocomplete="new-password" aria-required="true"
                            placeholder="password" />
                        <span asp-validation-for="Input.Password" class="text-danger"></span>
                    </div>
                    <div class="form-floating mb-3 wrapper">
                        <label asp-for="Input.ConfirmPassword" class="text">Confirm Password</label>
                        <input asp-for="Input.ConfirmPassword" class="form-control emailAndPassword" autocomplete="new-password"
                            aria-required="true" placeholder="password" />
                        <span asp-validation-for="Input.ConfirmPassword" class="text-danger"></span>
                    </div>
                    <button id="registerSubmit" type="submit" class="w-100 btn btn-lg btn-primary loginButton">Register</button>
                </form>
            </div>
            <div class="singleRow">
                @{
                    if ((Model.ExternalLogins?.Count ?? 0) == 0)
                    {
                        <div>
                            <p>
                                There are no external authentication services configured. See this <a
                                    href="https://go.microsoft.com/fwlink/?LinkID=532715">article
                                    about setting up this ASP.NET application to support logging in via external services</a>.
                            </p>
                        </div>
                    }
                    else
                    {
                        <form id="external-account" asp-page="./ExternalLogin" asp-route-returnUrl="@Model.ReturnUrl" method="post"
                            class="form-horizontal">
                            <div>
                                <p>
                                    @foreach (var provider in Model.ExternalLogins!)
                                    {
                                        
                                        <button type="submit" class="btn btn-primary loginButton githubButton" name="provider" value="@provider.Name"
                                            title="Log in using your @provider.DisplayName account">@provider.DisplayName</button>
                                    }
                                </p>
                            </div>
                        </form>
                    }
                }
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <partial name="_ValidationScriptsPartial" />
}
