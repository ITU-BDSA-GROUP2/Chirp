@page "/aboutme"
@model Chirp.Razor.Pages.AboutMeModel
@addTagHelper *, Microsoft.AspNetCore.Mvc.TagHelpers
@{
    ViewData["Title"] = "Chirp!";
    Layout = "Shared/_Layout";
    var currentUser = await Model.GetCurrentAuthor(User.Identity?.Name!);

    if (currentUser == null) 
    {
        Model.RedirectToStartPage();
        return;
    }
}

<div>
    <h2> About me </h2>
    <div class="userInformation">
        <div class="profilePicture">
            <form method="POST" asp-page-handler="Image">        
                <img id ="imgid" src="@await Model.GetImageUrl()" value="@await Model.GetImageUrl()" asp-for="ImageUrl"> 
                <input id="curImg" type="hidden" value="@await Model.GetImageUrl()" asp-for="ImageUrl"/>
                <div class="imageButtons">
                    <i class="fa-solid fa-arrow-left" asp-for="ImageUrl" onclick="prevImg(document.getElementById('curImg').value)"></i>
                    <button class="checkmark" type="submit">
                        <i class="fa-solid fa-check"></i>
                    </button>
                    <i class="fa-solid fa-arrow-right" asp-for="ImageUrl" onclick="nextImg(document.getElementById('curImg').value)"></i>
                </form> 
            </div>
        </div>
        <div>
            <form class="updateUserInformation" method="POST" asp-page-handler="UpdateAuthor">
                <div>
                    @if (!ViewData.ModelState.IsValid) 
                    {
                        <ul class="errorMSG">
                            <li>@Html.ValidationMessage("ErrorMessageUsername")</li>
                            <li>@Html.ValidationMessage("ErrorMessageEmail")</li>
                        </ul>
                    }
                </div>
                <div asp-validation-summary="ModelOnly" class="errorMSG" role="alert"></div>
                <div class="inputWrapper">
                    <span>
                        <label class="form-label text" for="Username">Username</label>
                        <input asp-for="Username" class="updateUserInformationInput" autocomplete="false" aria-required="true"
                            value="@currentUser.Name" />
                    </span>
                    <span>
                        <label class="form-label text" for="Email">Email</label>
                        <input asp-for="Email" class="updateUserInformationInput" autocomplete="false" aria-required="true"
                            value="@currentUser.Email" />
                    </span>
                </div>
                <div class="buttonWrapper">
                    <button type="submit" class="updateButton">Update user</button>
                </div>
            </form>
            
            <form class="deleteUserFormPos" method="POST" asp-page-handler="DeleteAuthor">
                <div class="buttonWrapper">
                    <button type="submit" class="deleteButton">Delete user</button>
                </div>
            </form>
        </div>
    </div>

    <hr>

    <div class="followesList">
        @if (Model.Followers.Any())
        {
            <p class="text">You are following:</p>
            <ul>
                @foreach (var follower in Model.Followers)
                {
                    var nameOfFollower =  await Model.getAuthor(follower.AuthorId);

                    if (nameOfFollower == null) 
                    {
                        <li>ERROR</li>
                    }
                    else
                    {
                        <li><a href="/@nameOfFollower.Name.">@nameOfFollower.Name</a></li>
                    }
                    
                }
            </ul>
        }
        else 
        {
            <p class="text">You are not following anyone.</p>
        }
    </div>

    <hr>

    <div>
        @if (Model.Cheeps.Any())
        {
            <ul id="messagelist" class="cheeps">
                @foreach (var cheep in Model.Cheeps)
                {
                    <li>
                        <img src="@await Model.GetImageUrl(cheep.Author)"> 
                        <p class="cheepAuhtor">
                            <strong>
                                <a href="/@cheep.Author">@cheep.Author</a>
                            </strong>
                        </p>        
                        <p class="cheepText">@cheep.Text</p>

                        <br>
                        <hr>
                    
                        <div class="footerGrouping">
                            <p class="time"><small>&mdash; @cheep.Timestamp.ToLocalTime()</small></p>
                            <span class="likeWrapper">
                                <div>
                                    <form method="POST" asp-page-handler="Like"> 
                                        <input type="hidden" value="@cheep.Id" asp-for="CheepId"/>
                                        @if (!await Model.IsLiked(cheep.Id, User.Identity?.Name!))
                                        {
                                            <button class="likeButton" type="submit">Like</button>
                                        } 
                                        else 
                                        {
                                            <button class="likeButton" type="submit">Dislike</button>
                                        }
                                    </form> 
                                </div>
                                <span class="likeCounter">@cheep.Likes</span>
                            </span>
                        </div>
                    </li>
                }
            </ul>
        }
        else
        {
            <em>There are no cheeps so far.</em>
        }
    </div>
</div>